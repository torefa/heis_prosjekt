Endringslogg:
	- Har lagd en egen drive-fc for å minimere kode
	- Har lagd utgang fra evStopp(...) til å endre state
	- Lager en egen state S_TIMEOUT for å hindre at heisen kjører videre før timeren er ute
		- Nå kan man kun kjøre videre fra evButton_pressed hvis el_state er S_IDLE eller S_TIMEOUT
		- Men evTimeout kjører selv videre. Så ^ treger egentlig bare å kjøre videre hvis el_state == S_IDLE
	- Har gjort det sånn at evStopp(...) alltid går inn i el_state S_IDLE.
	- I evButton_pressed: Hvis floor == current_floor, åpner heisen døra og starter timer
	- Flyttet includes til .h
	- Har laget FALSE = 0 og TRUE = 1 i FSM, main og timer, OFF = 0 og ON = 1 for lamper i FSM, og NO_ORDER = 0 og ORDER = 1 i queue.
	- Fiksa også en enum el_floor i FSM
	- Har lagt #includes i .h-filer, og byttet pragma once med #ifndef xxx og #define xxx. Har hørt at det er bedre.
	- La over enum for motor_direction og buttons i definitions.h
	
Tanker:
	- Burde evEvent bytte navn? For kontinuitet
	- Trengs S_ forran states? Er det kanskje selvforklarende?
	- Tregs egentlig S_STOP_BUTTON_AT_FLOOR? Det er bare for å åpne døra, og det kan egentlig gjøres bare ved å sjekke el_state
	- Trenger man å sjekke om køen er tom i evFloor_reached?
	- Må elev.c og io.c også ha god lesbarhet??